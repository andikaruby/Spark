-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE conditional_t USING PARQUET AS SELECT c1, c2 FROM VALUES(1d, 0),(2d, 1),(null, 1),(CAST('NaN' AS DOUBLE), 0) AS t(c1, c2)
-- !query schema
struct<>
-- !query output



-- !query
SELECT nanvl(c2, c1/c2 + c1/c2) FROM conditional_t
-- !query schema
struct<nanvl(c2, ((c1 / c2) + (c1 / c2))):double>
-- !query output
0.0
0.0
1.0
1.0


-- !query
SELECT nanvl(c2, 1/0) FROM conditional_t
-- !query schema
struct<nanvl(c2, (1 / 0)):double>
-- !query output
0.0
0.0
1.0
1.0


-- !query
SELECT nanvl(1-0, 1/0) FROM conditional_t
-- !query schema
struct<nanvl((1 - 0), (1 / 0)):double>
-- !query output
1.0
1.0
1.0
1.0


-- !query
SELECT if(c2 >= 0, 1-0, 1/0) from conditional_t
-- !query schema
struct<(IF((c2 >= 0), (1 - 0), (1 / 0))):double>
-- !query output
1.0
1.0
1.0
1.0


-- !query
SELECT if(1 == 1, 1, 1/0)
-- !query schema
struct<(IF((1 = 1), 1, (1 / 0))):double>
-- !query output
1.0


-- !query
SELECT if(1 != 1, 1/0, 1)
-- !query schema
struct<(IF((NOT (1 = 1)), (1 / 0), 1)):double>
-- !query output
1.0


-- !query
SELECT coalesce(c2, 1/0) from conditional_t
-- !query schema
struct<coalesce(c2, (1 / 0)):double>
-- !query output
0.0
0.0
1.0
1.0


-- !query
SELECT coalesce(1, 1/0)
-- !query schema
struct<coalesce(1, (1 / 0)):double>
-- !query output
1.0


-- !query
SELECT coalesce(null, 1, 1/0)
-- !query schema
struct<coalesce(NULL, 1, (1 / 0)):double>
-- !query output
1.0


-- !query
SELECT case when c2 >= 0 then 1 else 1/0 end from conditional_t
-- !query schema
struct<CASE WHEN (c2 >= 0) THEN 1 ELSE (1 / 0) END:double>
-- !query output
1.0
1.0
1.0
1.0


-- !query
SELECT case when 1 < 2 then 1 else 1/0 end
-- !query schema
struct<CASE WHEN (1 < 2) THEN 1 ELSE (1 / 0) END:double>
-- !query output
1.0


-- !query
SELECT case when 1 > 2 then 1/0 else 1 end
-- !query schema
struct<CASE WHEN (1 > 2) THEN (1 / 0) ELSE 1 END:double>
-- !query output
1.0


-- !query
SELECT NULLIF(1, 1)
-- !query schema
struct<nullif(1, 1):int>
-- !query output
NULL


-- !query
SELECT NULLIF(1, 2)
-- !query schema
struct<nullif(1, 2):int>
-- !query output
1


-- !query
SELECT NULLIF(NULL, 1)
-- !query schema
struct<nullif(NULL, 1):void>
-- !query output
NULL


-- !query
SELECT NULLIF(1, NULL)
-- !query schema
struct<nullif(1, NULL):int>
-- !query output
1


-- !query
SELECT NULLIF(NULL, NULL)
-- !query schema
struct<nullif(NULL, NULL):void>
-- !query output
NULL


-- !query
SELECT NULLIF('abc', 'abc')
-- !query schema
struct<nullif(abc, abc):string>
-- !query output
NULL


-- !query
SELECT NULLIF('abc', 'xyz')
-- !query schema
struct<nullif(abc, xyz):string>
-- !query output
abc


-- !query
SELECT NULLIF(id, 1) FROM range(10) GROUP BY NULLIF(id, 1)
-- !query schema
struct<nullif(id, 1):bigint>
-- !query output
0
2
3
4
5
6
7
8
9
NULL


-- !query
SELECT NULLIF(id, 1), COUNT(*) FROM range(10) GROUP BY NULLIF(id, 2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"id\"",
    "expressionAnyValue" : "\"any_value(id)\""
  }
}


-- !query
SELECT NULLIF(id, 1), COUNT(*) FROM range(10) GROUP BY NULLIF(id, 1) HAVING COUNT(*) > 1
-- !query schema
struct<nullif(id, 1):bigint,count(1):bigint>
-- !query output



-- !query
SELECT nullifzero(0),
  nullifzero(cast(0 as tinyint)),
  nullifzero(cast(0 as bigint)),
  nullifzero('0'),
  nullifzero(0.0),
  nullifzero(1),
  nullifzero(null)
-- !query schema
struct<nullifzero(0):int,nullifzero(CAST(0 AS TINYINT)):tinyint,nullifzero(CAST(0 AS BIGINT)):bigint,nullifzero(0):string,nullifzero(0.0):decimal(1,1),nullifzero(1):int,nullifzero(NULL):void>
-- !query output
NULL	NULL	NULL	NULL	NULL	1	NULL


-- !query
SELECT nullifzero('abc')
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'abc'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"BIGINT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "nullifzero('abc')"
  } ]
}


-- !query
SELECT zeroifnull(null),
  zeroifnull(1),
  zeroifnull(cast(1 as tinyint)),
  zeroifnull(cast(1 as bigint))
-- !query schema
struct<zeroifnull(NULL):int,zeroifnull(1):int,zeroifnull(CAST(1 AS TINYINT)):int,zeroifnull(CAST(1 AS BIGINT)):bigint>
-- !query output
0	1	1	1


-- !query
SELECT zeroifnull('abc')
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'abc'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"BIGINT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "zeroifnull('abc')"
  } ]
}


-- !query
DROP TABLE conditional_t
-- !query schema
struct<>
-- !query output

