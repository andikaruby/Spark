syntax = "proto3";

package pyspark.sql.streaming;

message StateRequest {
  int32 version = 1;
  oneof method {
    StatefulProcessorCall statefulProcessorCall = 2;
    StateVariableRequest stateVariableRequest = 3;
    ImplicitGroupingKeyRequest implicitGroupingKeyRequest = 4;
  }
}

message StateResponse {
  int32 statusCode = 1;
  string errorMessage = 2;
}

message StatefulProcessorCall {
  oneof method {
    SetHandleState setHandleState = 1;
    StateCallCommand getValueState = 2;
    StateCallCommand getListState = 3;
    StateCallCommand getMapState = 4;
  }
}

message StateVariableRequest {
  oneof method {
    ValueStateCall valueStateCall = 1;
  }
}

message ImplicitGroupingKeyRequest {
  oneof method {
    SetImplicitKey setImplicitKey = 1;
    RemoveImplicitKey removeImplicitKey = 2;
  }
}

message StateCallCommand {
  string stateName = 1;
  string schema = 2;
}

message ValueStateCall {
  string stateName = 1;
  oneof method {
    Exists exists = 2;
    Get get = 3;
    ValueStateUpdate valueStateUpdate = 4;
    Clear clear = 5;
  }
}

message SetImplicitKey {
  bytes key = 1;
}

message RemoveImplicitKey {
}

message Exists {
}

message Get {
}

message ValueStateUpdate {
  string schema = 1;
  bytes value = 2;
}

message Clear {
}

enum HandleState {
  CREATED = 0;
  INITIALIZED = 1;
  DATA_PROCESSED = 2;
  CLOSED = 3;
}

message SetHandleState {
  HandleState state = 1;
}
